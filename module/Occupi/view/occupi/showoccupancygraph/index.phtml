<?php

$this->headTitle('Occupi');

$this->mainMenu()->setActiveItemId('occupi/showoccupancygraph');

$this->pageBreadcrumbs()->setItems([
            'Home'=>$this->url('home'),
    'Occupi'=>$this->url('occupi'),
    'Show Occupancy Graph'=>$this->url('occupi/showoccupancygraph'),
            ]);

?>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script type="text/javascript" src="/libs/jquery/jqplot/jquery.jqplot.js"></script>
<script type="text/javascript" src="/libs/jquery/jqplot/jqplot.json2.js"></script>
<link rel="stylesheet" type="text/css" href="/libs/jquery.jqplot/jquery.jqplot.css" />
<h1>Show Occupancy Graph</h1>

<script>
    $(document).ready(function(){

        $.ajax({
            type: "GET",
            url : "http://occupi.yottatrend.com/occupi/showoccupancygraph/getOccupancyData",
            //data : $("#mvl_main_new_user_login_form_data").serialize(),
            success: function(response){
                //$('#occupi_data_block_checkin_list').html(response);

                // Our ajax data renderer which here retrieves a text file.
                // it could contact any source and pull data, however.
                // The options argument isn't used in this renderer.
                var ajaxDataRenderer = function(url, plot, options) {
                    var ret = null;
                    $.ajax({
                        // have to use synchronous here, else the function
                        // will return before the data is fetched
                        async: false,
                        url: url,
                        dataType:"json",
                        success: function(data) {
                            ret = data;
                        }
                    });
                    return ret;
                };

                // The url for our json data
                var jsonurl = response;

                // passing in the url string as the jqPlot data argument is a handy
                // shortcut for our renderer.  You could also have used the
                // "dataRendererOptions" option to pass in the url.
                var plot2 = $.jqplot('chart1', jsonurl,{
                    title: "Occupancy Graph",
                    dataRenderer: ajaxDataRenderer,
                    dataRendererOptions: {
                        unusedOptionalUrl: jsonurl
                    }
                });

            }
        });



    });

</script>
<div id="chart1" style="height: 450px;"></div>








